<!--
	Document outline:
	1. HTML Essential Training
		1.1. Structuring Pages
			1.1.1. Conveying meaning through structure
			1.1.2. Sectioning elements
			1.1.3. Document outlines
			1.1.4. W3C Warning
			1.1.5. WAI-ARIA Roles

	Structural tags are not yet present, thus they work like this:
	1. <aside> </aside> defines content aside from the page content. Represents a section of a document with content connected tangentially to the main content of the document (often presented as a sidebar).
	2. <article> </article> defines an article. Represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include: a forum post, a magazine or newspaper article, or a blog entry.
	3. <nav> </nav> defines navigation links. Represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.
	4. <section> </section> defines a section in a document. Represents a standalone section of functionality contained within an HTML document, typically with a heading, which doesn't have a more specific semantic element to represent it.

	Following semantic tags are used:
	1. <header> </header> specifies a header for a document or section. Represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also other elements like a logo, a search form, an author name, and so on.
	2. <footer> </footer> defines a footer for a document or section. Represents a footer for its nearest sectioning content or sectioning root element. A footer typically contains information about the author of the section, copyright data or links to related documents.
	3. <main> </main> specifies the main content of a document. Represents the main content of the <body> of a document, portion of a document, or application. The main content area consists of content that is directly related to, or expands upon the central topic of, a document or the central functionality of an application.

-->

<!DOCTYPE HTML>
<html lang="en">
<head>
	<meta charset="utf-8">
	<title>Introduction to HTML</title>
	<link href="_css/styles.css" rel="stylesheet" type="text/css">
</head>
<body>
	<header><h1>HTML Essential Training</h1>
	<h2>Structuring Pages</h2></header>

<nav>
	<ul>
	  <li><a href="intro.htm" title="Introduction to HTML">Introduction to HTML</a></li>
	  <li><a href="syntax.htm" title="HTML syntax">HTML syntax</a></li>
	  <li><a href="structure.htm" title="Structuring pages">Structuring pages</a></li>
	  <li><a href="links.htm" title="Creating links">Creating links</a></li>
	  <li><a href="reference.htm" title="HTML Reference">HTML reference</a></li>
	  <li><a href="next.htm" title="Next steps">Next steps</a></li>
	</ul>
</nav>

<main>
	<section>
			<h3>Conveying meaning through structure</h3>
		<p>Creating properly structured pages is the foundation of any good website. A solid semantic structure allows you to convey meaning and properly represent content types through nothing more than the page's markup. This, in turn, makes your content more accessible, easier to index and search, and makes it easier to repurpose. Remember that there are a lot of different devices, robots, and other user agents that will be reading your code. <em>Without a consistent, semantic structure your site will be less effective.</em> </p>
	</section>
		
	<section>
			<h3>Sectioning elements </h3>
		<p>One way to add meaning to your content is to organize them into sections that convey meaning and structure. For example it's pretty standard to contain introductory information within a section, page navigation within its own area, the page's main content in its own region, and related information within a sidebar. HTML contains numerous elements that are designed to assist in the logical structuring and semantics of page content. </p>
		<p>In previous versions of HTML creating new sections of content was done almost exclusively through the use of <b>heading</b> tags, with <b>divs</b> being used to group areas of content together. <b>Class</b> or <b>ID</b> attributes would allow designers to attach more semantic meaning to the groups, although this meant little to most user agents. In HTML5 new sectioning and semantic elements were introduced to help represent commonly used sections and create more consistent page structures. Tags like the <b>aside</b>, <b>article</b>, <b>footer</b>, <b>header</b>, <b>main</b>, <b>nav</b>, and <b>section</b> allow authors to identify common page regions and convey more semantic meaning. </p>
		<p>Although some of these elements are very specific, in many cases which element you'll use and how you'll structure them is very much a judgment call. Make sure, however, that your finished structure represents the desired document outline. </p>
	</section>

	<section>
			<h3>Document outlines </h3>
		<p>One of the fundamental concepts of HTML is that its documents can be represented by a document outline that summarizes the content of the page. Imagine a page being represented by a table of contents and you'll have a good idea of what one of these outlines might look like. These outlines assist in tasks such as quickly searching documents and making content easier to navigate for assistive devices. </p>
		<p>Prior to HTML5, document outlines were generated entirely through the use of headings. An H1 at the top of the page would serve to identify the page content, and subsequent headings would create sections and subsections inside of it. This meant that having a strategy for when to use certain headings was critical for maintaining consistent document structure. In HTML5 a new outline algorithm was introduced that added the new sectioning elements to the heading elements and created a more sophisticated outlining model. Although not currently implemented by user agents it is still recommended that authors familiarize themselves with it so that they're using the new sectioning and semantic tags properly. </p>
		<p>It is still considered to be a best practice to use heading tags to establish the document outline. Mozilla has a fantastic article on sections and outlines in HTML documents that I strongly recommend reading.</p>
	</section>

	<section>
			<h3>W3C Warning</h3>
		<p>At the time of the authoring of this course, the W3C had posted this warning regarding the HTML5 outline algorithm:</p>
		<blockquote>There are currently no known implementations of the outline algorithm in graphical browsers or assistive technology user agents, although the algorithm is implemented in other software such as conformance checkers. Therefore the outline algorithm cannot be relied upon to convey document structure to users. Authors are advised to use heading rank (h1-h6) to convey document structure.</blockquote>
	</section>

	<section>
			<h3>WAI-ARIA Roles</h3>
		<p>Carefully structuring an HTML page is the first step into ensuring that the content is accessible to all users. You should also use WAI-ARIA role attributes where appropriate to increase accessibility and improve semantics. WAI-ARIA is short for the Web Accessibility Initiative's Accessible Rich Internet Application specification. The roles attribute attempts to identify content and its capabilities by assigning it to a predefined role. This helps assistive devices understand what the content is, how it relates to other content, and how the content can be interacted with. The W3C has a fantastic resource on how WAI-ARIA works and how it should be used with HTML.</p>
	</section>
</main>

<footer><p>&copy; lynda.com | follow me and lynda.com on Twitter! @jameswillweb @lyndadotcom</p></footer>

</body>
</html>
